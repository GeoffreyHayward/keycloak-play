## Docker profile: service-to-service using the docker network

# Explicit endpoints:
# - authorization-uri uses localhost (browser follows this URL)
# - token/jwk/userinfo use the docker network host (service-to-service)
spring.security.oauth2.client.provider.keycloak.authorization-uri=${KEYCLOAK_AUTH_URI:http://localhost:8080/auth/realms/${KEYCLOAK_REALM:play}/protocol/openid-connect/auth}
spring.security.oauth2.client.provider.keycloak.token-uri=${KEYCLOAK_TOKEN_URI:http://keycloak:8080/auth/realms/${KEYCLOAK_REALM:play}/protocol/openid-connect/token}
spring.security.oauth2.client.provider.keycloak.jwk-set-uri=${KEYCLOAK_JWK_URI:http://keycloak:8080/auth/realms/${KEYCLOAK_REALM:play}/protocol/openid-connect/certs}
spring.security.oauth2.client.provider.keycloak.user-info-uri=${KEYCLOAK_USERINFO_URI:http://keycloak:8080/auth/realms/${KEYCLOAK_REALM:play}/protocol/openid-connect/userinfo}
spring.security.oauth2.client.provider.keycloak.user-name-attribute=preferred_username

# Health banner for docker (show localhost so links work in browser)
app.keycloak.url=${KEYCLOAK_URL:http://localhost:8080/auth}
